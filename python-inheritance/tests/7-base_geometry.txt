Integer Validator


    Importing the class module:
        >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    Print the area:
        >>> BG = BaseGeometry()
        >>> BG.area()
        Traceback (most recent call last):
        ...
        Exception: area() is not implemented

    Attempting non-int:
        >>> BaseGeometry.integer_validator("self", "name", "6")
        Traceback (most recent call last):
        ...
        TypeError: name must be an integer

    Negative value:
        >>> BaseGeometry.integer_validator("self", "name", -6)
        Traceback (most recent call last):
        ...
        ValueError: name must be greater than 0

    Positive value:
        >>> BaseGeometry.integer_validator("self", "name", 6)

    Attempting None value:
        >>> BaseGeometry.integer_validator("self", "age", None)
        Traceback (most recent call last):
        ...
        TypeError: age must be an integer

    Attemping a list:
        >>> BaseGeometry.integer_validator("self", "age", [3])
        Traceback (most recent call last):
        ...
        TypeError: age must be an integer

    No arguments:
        >>> BaseGeometry.integer_validator()
        Traceback (most recent call last):
        ...
        TypeError: integer_validator() missing 3 required positional arguments: 'self', 'name', and 'value'

    Too many arguments:
        >>> BaseGeometry.integer_validator("age", "value", 666, 100)
        Traceback (most recent call last):
        ...
        TypeError: integer_validator() takes 3 positional arguments but 4 were given

    Is a string:
        >>> BaseGeometry.integer_validator("age", "age", "string")
        Traceback (most recent call last):
        ...
        TypeError: age must be an integer

    Bool:
        >>> BaseGeometry.integer_validator("name", "value", True)
        Traceback (most recent call last):
        ...
        TypeError: value must be an integer

    Tuple:
        >>> BaseGeometry.integer_validator("age", "value", (1, 2, 3, 4))
        Traceback (most recent call last):
        ...
        TypeError: value must be an integer

    Floats:
        >>> BaseGeometry.integer_validator("age", "value", 3.5)
        Traceback (moost recent call last):
        ...
        TypeError: value must be an integer
